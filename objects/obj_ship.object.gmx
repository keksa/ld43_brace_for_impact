<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>cap_speed = 0;
initial_cap_speed = 0;
speed = cap_speed;
direction = 90;
smooth_direction = direction;
engine_count = 5;
sensor_range = 1000;

hull = instance_create(x, y, obj_hull);
with (hull) {
    ship = other;
    image_angle = ship.direction;

    // bottom engines
    engine_b_l = scr_create_engine(-39, -40, obj_engine, "b_l");
    engine_b_m = scr_create_engine(-34, 0, obj_engine, "b_m");
    engine_b_r = scr_create_engine(-39, 40, obj_engine, "b_r");
    
    // top engines
    engine_t_l = scr_create_engine(
        66,
        -59,
        obj_engine_small,
        "t_l"
    );
    engine_t_r = scr_create_engine(
        66,
        59,
        obj_engine_small,
        "t_r"
    );
}

engines = ds_map_create();
engines[? "b_l"] = hull.engine_b_l;
engines[? "b_m"] = hull.engine_b_m;
engines[? "b_r"] = hull.engine_b_r;
engines[? "t_l"] = hull.engine_t_l;
engines[? "t_r"] = hull.engine_t_r;


tutorial_alpha = 1;
tutorial_alpha_way = -1;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// player always centered vertically
y = 350;

visible = ! global.gameOver;
if (global.gameOver) {
    if (global.won || global.lost) {
        speed = 11;
    }
    exit;
}

scr_player_movement();
scr_player_engine_pick();

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// handle "selected for tossing" draw

draw_set_font(f_mono_bold_16);
draw_set_colour(c_white);
draw_set_valign(fa_middle);
draw_set_halign(fa_center);

var LKeyText = "&lt;";
var keyWidth = string_width(LKeyText);
var keyHeight = string_height(LKeyText);
var LSpX = - hull.sprite_height;

var RKeyText = "&gt;";
var RSpX = hull.sprite_height;

var hPadding = 4;
var vPadding = 3;

tutorial_alpha += (0.025 * tutorial_alpha_way);
if (tutorial_alpha &gt; 1) {
    tutorial_alpha = 1;
    tutorial_alpha_way *= -1;
} else if (tutorial_alpha &lt; 0) {
    tutorial_alpha = 0;
    tutorial_alpha_way *= -1;
}

draw_set_alpha(1);
draw_text(x + LSpX, y, LKeyText);
draw_text(x + RSpX, y, RKeyText);

draw_set_alpha(tutorial_alpha);

// left key
draw_roundrect_ext(
    x + LSpX - (keyHeight / 2) - hPadding,
    y - (keyHeight / 2) - vPadding,
    x + LSpX + (keyHeight / 2) + hPadding,
    y + (keyHeight / 2) + vPadding,
    4,
    4,
    true
);

// right key
draw_roundrect_ext(
    x + RSpX - (keyHeight / 2) - hPadding,
    y - (keyHeight / 2) - vPadding,
    x + RSpX + (keyHeight / 2) + hPadding,
    y + (keyHeight / 2) + vPadding,
    4,
    4,
    true
);


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.begin_counter &gt; 0) {
    event_user(0); // arrow keys
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="32">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.gameOver) {
    exit;
}

scr_toss_engine();

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
